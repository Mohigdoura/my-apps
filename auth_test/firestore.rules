rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can read/write only their own data
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Restaurants - anyone can read, only admins can write
    match /restaurants/{restaurantId} {
      allow read: if true;
      allow write: if request.auth != null && 
                   exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin';
    }
    
    // Menu items - anyone can read, only restaurant admin can write
    match /items/{itemId} {
      allow read: if true;
      allow write: if request.auth != null && 
                   exists(/databases/$(database)/documents/items/$(itemId)) &&
                   get(/databases/$(database)/documents/restaurants/$(resource.data.restaurant_id)).data.admin_id == request.auth.uid;
    }
    
    // Orders - customers can create, read their own orders; delivery people can read/update assigned orders
    match /orders/{orderId} {
      allow read: if request.auth != null && 
                 (resource.data.customer_id == request.auth.uid || 
                  resource.data.delivery_id == request.auth.uid ||
                  get(/databases/$(database)/documents/restaurants/$(resource.data.restaurant_id)).data.admin_id == request.auth.uid);
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                   (resource.data.customer_id == request.auth.uid || 
                    resource.data.delivery_id == request.auth.uid ||
                    get(/databases/$(database)/documents/restaurants/$(resource.data.restaurant_id)).data.admin_id == request.auth.uid);
    }
  }
}